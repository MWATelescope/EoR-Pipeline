params {
    obsids_path = 'obsids.csv'

    // filter obsids
    filter_pointings = [0,2,4]
    // filter_bad_tile_frac = 1.5/128
    filter_bad_tile_frac = 64/128
    // filter_dead_dipole_frac = 4.5/256
    filter_dead_dipole_frac = 128/256

    // asvo
    asvo_api_key = 'EMPTY'

    // prep
    prep_time_res_s = 2
    prep_freq_res_khz = 40

    // qa
    flag_occupancy_threshold = 0.25

    // cal
    cal_suffix = ''
    // - key: short name that appears in calibration solution filename
    // - value: args for hyperdrive di-cal
    dical_args = [
        "30l_src4k":"--uvw-min 30l -n 4000"
    ]
    // - key: name of calibration
    // - value[0]: short name that appears in apply
    // - value[1]: args for hyperdrive apply
    apply_args = [
        "poly_30l_src4k": ["8s_80kHz", "--time-average 8s --freq-average 80kHz"],
        "30l_src4k": ["8s_80kHz", "--time-average 8s --freq-average 80kHz"],
    ]

    // imaging
    img_suffix = ''
    img_size = 2048
    img_scale = '40asec'
    img_niter = 0
    img_auto_threshold = 1
    img_auto_mask = 5
    img_mem = 100
    img_channels_out = '24'

    // results
    result_suffix = ''

    // defaults for shims
    hyperdrive = 'hyperdrive'
    birli = 'birli'
    giant_squid = 'giant-squid'
    jq = 'jq'
    proxy_prelude = ''
    astro_conda = ''
}
profiles {
    dug {
        singularity {
            cacheDir = '/data/curtin_mwaeor/singularity'
        }
        executor {
            $slurm {
                // queueSize = 20
                // submitRateLimit = '100ms'
                jobName = { "nf-${task.process.split(':')[-1]}.${task.tag}" }
                exitReadTimeout = '600s'
            }
        }
        process {
            scratch = '$TMPDIR_SHM'
            executor = 'slurm'
            queue = 'curtin_mwaeor'
            cpus = 12
            memory = '60G'
            clusterOptions = '--constraint=knl&nogpu'
            errorStrategy = 'ignore'
            stageInMode = 'copy'
            stageOutMode = 'copy'
            beforeScript = 'set -x; pwd; hostname; env | sort'
            afterScript = 'set -x; ls -al'
            withLabel: cpu {
                cpus = 36
            }
            withLabel: gpu {
                clusterOptions = "--constraint='v100'"
            }
            withLabel: img {
                clusterOptions = "--constraint='clx&nogpu'"
                // TODO: compile wsclean for knl
                // clusterOptions = '--constraint=knl&nogpu'
            }
        }
        params {
            outdir = '/data/curtin_mwaeor/data'
            proxy_prelude = 'export http_proxy="http://proxy.per.dug.com:3128" https_proxy="http://proxy.per.dug.com:3128" all_proxy="proxy.per.dug.com:3128" ftp_proxy="http://proxy.per.dug.com:3128"'
            astro_conda = '/data/curtin_mwaeor/sw/conda/dev'

            // sifs
            birli_sif = '/data/curtin_mwaeor/sw/singularity/birli/birli_mwaf.sif'
            mwa_qa_sif = '/data/curtin_mwaeor/sw/singularity/mwa_qa/mwa_qa_latest.sif'
            cotter_sif = '/data/curtin_mwaeor/sw/singularity/cotter/cotter_latest.sif'
            casa_sif = '/data/curtin_mwaeor/sw/singularity/casa/casa_latest.sif'

            // binaries
            hyperdrive = '/data/curtin_mwaeor/sw/bin/hyperdrive'
            birli = "singularity exec --bind \$PWD:/tmp --writable-tmpfs --pwd /tmp --home \$PWD --cleanenv ${params.birli_sif} /opt/cargo/bin/birli"
            giant_squid = '/data/curtin_mwaeor/sw/bin/giant-squid'
            jq = '/data/curtin_mwaeor/sw/bin/jq'
            wsclean = '/data/curtin_mwaeor/sw/bin/wsclean'
            casa = "singularity exec --bind \$PWD:/tmp --writable-tmpfs --pwd /tmp --home \$PWD --cleanenv ${params.casa_sif} /usr/bin/casa"
            ps_metrics = "/data/curtin_mwaeor/src/chips/src/ps_metrics"

            // calibration
            sourcelist = '/data/curtin_mwaeor/data/srclist_pumav3_EoR0LoBESv2_fixedEoR1pietro+ForA_phase1+2_edit.txt'
            beam_path = '/data/curtin_mwaeor/data/mwa_full_embedded_element_pattern.h5'
            // todo: can't determine this from nvidia-smi
            // cuda_compute = 80 // a100
            cuda_compute = 70 // v100
            num_gpus = 1
        }
    }
    sirius {
        process {
            scratch = '/tmp/mwaeor'
            executor = 'local'
        }
        params {
            outdir = '/data/dev'
            hyperdrive = '/usr/local/bin/hyperdrive'
            sourcelist = '/data/dev/calibration/srclist_pumav3_EoR0LoBESv2_fixedEoR1pietro+ForA_phase1+2.txt'
            beam_path = '/data/dev/calibration/mwa_full_embedded_element_pattern.h5'
            cuda_compute = 75
        }
    }
}